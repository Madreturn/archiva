<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      xmlns:aop="http://www.springframework.org/schema/aop"
      xmlns:plugin="http://atlassian.com/schema/spring/plugin"
      xsi:schemaLocation="
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
http://atlassian.com/schema/spring/plugin http://atlassian.com/schema/spring/plugin.xsd
http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

  <bean id="testbean" class="java.lang.Object" plugin:available="true"/>

  <bean id="loggerManager" class="org.codehaus.plexus.logging.slf4j.Slf4jLoggerManager"
    init-method="initialize"/>

  <bean id="urlFailureCache" class="org.apache.maven.archiva.policies.urlcache.DefaultUrlFailureCache">
    <constructor-arg ref="cache#url-failures-cache" type="org.codehaus.plexus.cache.Cache"/>
  </bean>

  <bean name="wagon#http" class="org.apache.maven.wagon.providers.http.LightweightHttpWagon" scope="prototype">
    <property name="httpHeaders">
      <map>
        <entry key="User-Agent" value="${user.agent}" />
      </map>
    </property>
  </bean>

  <bean name="wagon#https" class="org.apache.maven.wagon.providers.http.LightweightHttpsWagon" scope="prototype">
    <property name="httpHeaders">
      <map>
        <entry key="User-Agent" value="${user.agent}" />
      </map>
    </property>
  </bean>

  <bean id="propertyPlaceholder" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="location" value="classpath:application.properties" />
  </bean>
  
  <bean name="testXmlRpcService" lazy-init="true" scope="singleton" class="org.apache.archiva.web.xmlrpc.services.PingServiceImpl"/>
  
  <bean name="administrationService" lazy-init="true" scope="singleton" class="org.apache.archiva.web.xmlrpc.services.AdministrationServiceImpl">
    <constructor-arg ref="archivaConfiguration"/>
    <constructor-arg ref="repositoryContentConsumers"/>
    <constructor-arg ref="databaseConsumers"/>
    <constructor-arg ref="repositoryContentFactory"/>
    <constructor-arg ref="artifactDAO#jdo"/>
    <constructor-arg ref="databaseCleanupConsumer#not-present-remove-db-artifact"/>
    <constructor-arg ref="databaseCleanupConsumer#not-present-remove-db-project"/> 
    <constructor-arg ref="archivaTaskScheduler"/>       
  </bean> 

  <bean name="xmlrpcServicesList" lazy-init="true" scope="singleton" class="java.util.ArrayList">
    <constructor-arg ref="administrationService"/>
  </bean>
    
  <bean name="xmlRpcAuthenticator" class="org.apache.archiva.web.xmlrpc.security.XmlRpcAuthenticator">
      <constructor-arg>
         <ref bean="securitySystem"/>
      </constructor-arg>
  </bean>

  <bean id="mailSession" class="org.springframework.jndi.JndiObjectFactoryBean">
    <property name="jndiName" value="java:comp/env/mail/Session">
    </property>
  </bean>

  <bean name="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
    <property name="session" ref="mailSession"/>
  </bean>

  <!-- Plugin framework -->

  <bean name="pluginEventManager" class="com.atlassian.plugin.event.impl.DefaultPluginEventManager" scope="singleton"/>

  <bean id="packageScanningConfiguration" class="com.atlassian.plugin.osgi.container.impl.DefaultPackageScannerConfiguration">
  <property name="packageIncludes">
    <list>
        <value>org.apache.*</value>
    </list>
  </property>
  <property name="packageExcludes">
    <list>
        <value>com.springframework*</value>
        <value>org.apache.commons.logging*</value>
        <value>org.slf4j*</value>
    </list>
  </property>
  </bean>

  <bean id="osgiContainerManager" class="com.atlassian.plugin.osgi.container.felix.FelixOsgiContainerManager" scope="singleton">
      <constructor-arg value="${archiva.home}/framework-bundles"/>
      <constructor-arg ref="packageScanningConfiguration"/>
      <constructor-arg ref="hostComponentProvider"/>
      <constructor-arg ref="pluginEventManager"/>
  </bean>

  <!-- end plugin framework -->
</beans>

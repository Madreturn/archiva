 ------
 Staging Repositories
 ------

Staging Repositories

  Starting with Archiva 1.4, staging repositories are supported. A staging repository is a repository you use 
  to stage a release (while it undergoes testing and voting), before the release is officially announced and published
  to a releases repository where users can obtain it.

  With the support of staging repositories comes the ability to merge repositories from the web UI. By merging, we mean
  promoting the artifacts in the staging repository to the managed repository. In the current
  implementation, a user can create and attach a staging repository to an existing managed repository. An attached 
  staging repository is a shadow of its managed repository, meaning they would have the same configuration.

  We append <<-stage>> to the managed repository's ID to identify its staging repository. For example, repository
  <<<test>>> would have a staging repository called <<<test-stage>>>.

  If you're creating a new managed repository, just tick the <<<Create stage repository>>> check box. Otherwise, if
  you already have an existing managed repository and you want to create a staging repository, just edit the managed
  repository's configuration and tick the <<<Create stage repository>>> checkbox, then save the configuration. A staging
  repository will be created in the same directory as the managed repository.

  <<<Note:>>> By un-ticking the <<<Create stage repository>>> checkbox, the user can delete the attached staging
  repository. If the managed repository is deleted, then its attached staging repository is also deleted.

  The <<<snapshots>>> and <<<internal>>> repositories configured in Archiva by default, are not configured with attached
  staging repositories.

* Merging Repositories

  To merge or promote the artifacts in a staging repository to the managed repository, just click the <<<Merge>>> button
  in the repository configuration page.

[../images/repository-merge.png] Merge Button

  Archiva will check for conflicting artifacts between the two repositories, and list them (if it finds conflicts).
  The user will be asked to choose between two actions:

  [[1]] <<<Merge All>>> - ignore all conflicting artifacts and perform merging for all.

  [[2]] <<<Merge With Skip>>> - skip all conflicting artifacts and merge only the non-conflicting ones.

  []

[../images/conflicting-artifacts.png] Merge Actions

  In future, we plan to enhance this by allowing a user to select only specific artifacts to merge.



